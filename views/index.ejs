<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link href="/output.css" rel="stylesheet" />
    <title>Admin Panel - Vraj Shah</title>
  </head>

  <body class="bg-[#131712] text-[#F3F4F6] min-h-screen">
    <header
      class="h-16 sm:h-20 border-b border-[#22c55e]/20 backdrop-blur-sm bg-black/20 sticky top-0 z-50 flex justify-center items-center font-bold text-xl sm:text-3xl p-2 sm:p-4"
    >
      <span
        class="bg-gradient-to-r from-[#22c55e] to-[#10b981] text-transparent bg-clip-text"
        >Admin Panel - Vraj Shah</span
      >
    </header>

    <main class="container mx-auto px-4 py-12 max-w-3xl">
      <!-- Tab Navigation -->
      <div class="flex justify-center gap-4 mb-12">
        <button
          onclick="switchTab('projects')"
          id="projectsTab"
          class="text-lg font-medium px-6 py-2 rounded-lg transition-all duration-300 bg-[#1A1F1C]/50 border border-[#22c55e]/20 hover:border-[#22c55e]/40 focus:outline-none focus:ring-2 focus:ring-[#22c55e] active"
        >
          Projects
        </button>
        <button
          onclick="switchTab('experiences')"
          id="experiencesTab"
          class="text-lg font-medium px-6 py-2 rounded-lg transition-all duration-300 bg-[#1A1F1C]/50 border border-[#22c55e]/20 hover:border-[#22c55e]/40 focus:outline-none focus:ring-2 focus:ring-[#22c55e]"
        >
          Experiences
        </button>
      </div>

      <!-- Projects Section -->
      <div id="projectsSection" class="space-y-12">
        <div class="flex justify-center items-center flex-col gap-4 mb-12">
          <h1
            class="text-4xl font-bold bg-gradient-to-r from-[#22c55e] to-[#10b981] text-transparent bg-clip-text"
          >
            Add New Project
          </h1>
          <p class="text-[#9CA3AF] text-center">
            Fill out the project details below
          </p>
        </div>

        <form
          id="projectForm"
          action="/post"
          method="POST"
          class="flex flex-col gap-6 p-8 backdrop-blur-md bg-[#1A1F1C]/50 border border-[#22c55e]/20 rounded-2xl shadow-xl shadow-[#22c55e]/5"
        >
          <div class="flex flex-col gap-2">
            <label for="title" class="text-lg font-medium text-[#D1D5DB]"
              >Project Title</label
            >
            <input
              type="text"
              name="title"
              placeholder="Enter title of the project"
              required
              class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
            />
          </div>

          <div class="flex flex-col gap-2">
            <label for="ProjectDesc" class="text-lg font-medium text-[#D1D5DB]"
              >Project Description</label
            >
            <textarea
              name="ProjectDesc"
              placeholder="Enter project description"
              required
              rows="4"
              class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
            ></textarea>
          </div>

          <div class="flex flex-col gap-2">
            <label for="Github" class="text-lg font-medium text-[#D1D5DB]"
              >Github Link</label
            >
            <input
              type="url"
              name="Github"
              placeholder="https://github.com/username/project"
              required
              class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
            />
          </div>

          <div class="flex flex-col gap-2">
            <label for="LiveDemo" class="text-lg font-medium text-[#D1D5DB]"
              >Live Demo Link</label
            >
            <input
              type="url"
              name="LiveDemo"
              placeholder="https://your-project.com"
              required
              class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
            />
          </div>
          <div class="flex flex-col gap-2">
            <label for="techStack" class="text-lg font-medium text-[#D1D5DB]"
              >Tech Stack</label
            >
            <div class="flex flex-wrap gap-2 mb-2" id="techStackTags"></div>
            <div class="flex gap-2">
              <input
                type="text"
                id="techStackInput"
                placeholder="Add technology (Press Enter)"
                class="flex-1 bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
              />
              <input type="hidden" name="techStack" id="techStackHidden" />
            </div>
          </div>

          <button
            type="submit"
            class="mt-4 bg-gradient-to-r from-[#22c55e] to-[#10b981] text-white font-semibold px-6 py-3 rounded-lg hover:scale-[1.02] active:scale-[0.98] transition-all duration-200 shadow-lg shadow-[#22c55e]/25"
          >
            Add Project
          </button>
        </form>

        <!-- Projects List -->
        <section class="mt-16">
          <div class="flex justify-between items-center mb-8">
            <h2
              class="text-2xl font-bold bg-gradient-to-r from-[#22c55e] to-[#10b981] text-transparent bg-clip-text"
            >
              Current Projects
            </h2>
            <span class="text-[#9CA3AF] text-sm">
              <%= typeof projects !=='undefined' ? projects.length : 0 %>
              projects
            </span>
          </div>

          <div class="grid gap-6">
            <% if (typeof projects !=='undefined' && projects.length> 0) { %> <%
            projects.forEach(function(project) { %>
            <div
              class="p-6 backdrop-blur-md bg-[#1A1F1C]/50 border border-[#22c55e]/20 rounded-2xl shadow-xl shadow-[#22c55e]/5 hover:border-[#22c55e]/40 transition-all duration-300"
            >
              <div class="flex justify-between items-start mb-4">
                <h3 class="text-xl font-semibold text-[#F3F4F6]">
                  <%= project.title %>
                </h3>
                <div class="flex gap-3">
                  <a
                    href="<%= project.Github %>"
                    target="_blank"
                    class="text-[#22c55e] hover:text-[#10b981] transition-colors"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path
                        d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
                      ></path>
                    </svg>
                  </a>
                  <a
                    href="<%= project.LiveDemo %>"
                    target="_blank"
                    class="text-[#22c55e] hover:text-[#10b981] transition-colors"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path
                        d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                      ></path>
                      <polyline points="15 3 21 3 21 9"></polyline>
                      <line x1="10" y1="14" x2="21" y2="3"></line>
                    </svg>
                  </a>
                </div>
              </div>
              <div class="flex flex-wrap gap-2 mb-4">
                <% project.techStack.forEach(function(tech) { %>
                <span
                  class="py-2 px-4 bg-[#22c55e]/[0.08] border border-[#22c55e]/[0.2] rounded-full text-xs text-[#22c55e] font-medium transition-all duration-300 hover:bg-[#22c55e]/[0.15] hover:border-[#22c55e]/[0.4] hover:-translate-y-0.5"
                >
                  <%= tech %>
                </span>
                <% }); %>
              </div>
              <p class="text-[#9CA3AF] mb-4"><%= project.ProjectDesc %></p>
              <div class="flex justify-end gap-4">
                <button
                  onclick="deleteProject('<%= project._id %>')"
                  class="text-red-500 hover:text-red-400 transition-colors text-sm flex items-center gap-1"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M3 6h18"></path>
                    <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                    <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                  </svg>
                  Delete
                </button>
              </div>
            </div>
            <% }); %> <% } else { %>
            <div
              class="text-center p-8 backdrop-blur-md bg-[#1A1F1C]/50 border border-[#22c55e]/20 rounded-2xl"
            >
              <p class="text-[#9CA3AF]">No projects added yet</p>
            </div>
            <% } %>
          </div>
        </section>
      </div>

      <!-- Experiences Section -->
      <div id="experiencesSection" class="space-y-12 hidden">
        <div class="flex justify-center items-center flex-col gap-4 mb-12">
          <h1
            class="text-4xl font-bold bg-gradient-to-r from-[#22c55e] to-[#10b981] text-transparent bg-clip-text"
          >
            Add New Experience
          </h1>
          <p class="text-[#9CA3AF] text-center">
            Fill out the experience details below
          </p>
        </div>

        <form
          id="experienceForm"
          action="/experience"
          method="POST"
          class="flex flex-col gap-6 p-8 backdrop-blur-md bg-[#1A1F1C]/50 border border-[#22c55e]/20 rounded-2xl shadow-xl shadow-[#22c55e]/5"
        >
          <div class="flex flex-col gap-2">
            <label for="expTitle" class="text-lg font-medium text-[#D1D5DB]"
              >Position Title</label
            >
            <input
              type="text"
              name="expTitle"
              placeholder="Enter your position"
              required
              class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
            />
          </div>

          <div class="flex flex-col gap-2">
            <label for="company" class="text-lg font-medium text-[#D1D5DB]"
              >Company</label
            >
            <input
              type="text"
              name="company"
              placeholder="Enter company name"
              required
              class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
            />
          </div>

          <div class="grid grid-cols-2 gap-4">
            <div class="flex flex-col gap-2">
              <label for="startDate" class="text-lg font-medium text-[#D1D5DB]"
                >Start Date</label
              >
              <input
                type="date"
                name="startDate"
                required
                class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300"
              />
            </div>
            <div class="flex flex-col gap-2">
              <label for="endDate" class="text-lg font-medium text-[#D1D5DB]"
                >End Date</label
              >
              <input
                type="date"
                name="endDate"
                class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300"
              />
            </div>
          </div>

          <div class="flex flex-col gap-2">
            <label for="expDesc" class="text-lg font-medium text-[#D1D5DB]"
              >Description</label
            >
            <textarea
              name="expDesc"
              placeholder="Describe your role and achievements"
              required
              rows="4"
              class="bg-[#161A17] border border-[#22c55e]/20 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-[#22c55e] focus:border-transparent transition-all duration-300 placeholder-[#9CA3AF]/50"
            ></textarea>
          </div>

          <button
            type="submit"
            class="mt-4 bg-gradient-to-r from-[#22c55e] to-[#10b981] text-white font-semibold px-6 py-3 rounded-lg hover:scale-[1.02] active:scale-[0.98] transition-all duration-200 shadow-lg shadow-[#22c55e]/25"
          >
            Add Experience
          </button>
        </form>

        <!-- Experiences List -->
        <section class="mt-16">
          <div class="flex justify-between items-center mb-8">
            <h2
              class="text-2xl font-bold bg-gradient-to-r from-[#22c55e] to-[#10b981] text-transparent bg-clip-text"
            >
              Current Experiences
            </h2>
            <span class="text-[#9CA3AF] text-sm">
              <%= typeof experiences !=='undefined' ? experiences.length : 0 %>
              experiences
            </span>
          </div>

          <div class="grid gap-6">
            <% if (typeof experiences !=='undefined' && experiences.length> 0) {
            %> <% experiences.forEach(function(experience) { %>
            <div
              class="p-6 backdrop-blur-md bg-[#1A1F1C]/50 border border-[#22c55e]/20 rounded-2xl shadow-xl shadow-[#22c55e]/5 hover:border-[#22c55e]/40 transition-all duration-300"
            >
              <div class="flex justify-between items-start mb-4">
                <div>
                  <h3 class="text-xl font-semibold text-[#F3F4F6] mb-1">
                    <%= experience.expTitle %>
                  </h3>
                  <p class="text-[#22c55e] text-sm">
                    <%= experience.company %>
                  </p>
                  <p class="text-[#9CA3AF] text-sm mt-1">
                    <%= new
                    Date(experience.startDate).toLocaleDateString('en-US', {
                    month: 'short' , year: 'numeric' }) %> - <%=
                    experience.endDate ? new
                    Date(experience.endDate).toLocaleDateString('en-US', {
                    month: 'short' , year: 'numeric' }) : 'Present' %>
                  </p>
                </div>
                <button
                  onclick="deleteExperience('<%= experience._id %>')"
                  class="text-red-500 hover:text-red-400 transition-colors text-sm flex items-center gap-1"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M3 6h18"></path>
                    <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                    <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                  </svg>
                  Delete
                </button>
              </div>
              <p class="text-[#9CA3AF]"><%= experience.expDesc %></p>
            </div>
            <% }); %> <% } else { %>
            <div
              class="text-center p-8 backdrop-blur-md bg-[#1A1F1C]/50 border border-[#22c55e]/20 rounded-2xl"
            >
              <p class="text-[#9CA3AF]">No experiences added yet</p>
            </div>
            <% } %>
          </div>
        </section>
      </div>
    </main>

    <script>
      // Handle tech stack input
      // Tech Stack handling
      const techStackInput = document.getElementById("techStackInput");
      const techStackTags = document.getElementById("techStackTags");
      const techStackHidden = document.getElementById("techStackHidden");
      let techStack = [];

      techStackInput.addEventListener("keydown", (e) => {
        if (e.key === "Enter") {
          e.preventDefault();
          const tech = techStackInput.value.trim();
          if (tech && !techStack.includes(tech)) {
            techStack.push(tech);
            updateTechStackTags();
            techStackInput.value = "";
          }
        }
      });

      function updateTechStackTags() {
        techStackTags.innerHTML = techStack
          .map(
            (tech) => `
        <span class="group relative flex items-center gap-1 py-2 px-4 bg-[#22c55e]/[0.08] border border-[#22c55e]/[0.2] rounded-full text-xs text-[#22c55e] font-medium transition-all duration-300 hover:bg-[#22c55e]/[0.15] hover:border-[#22c55e]/[0.4]">
            ${tech}
            <button type="button" onclick="removeTech('${tech}')" class="opacity-100 group-hover:scale-110 transition-all duration-300">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="18" y1="6" x2="6" y2="18"></line>
                    <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
            </button>
        </span>
    `
          )
          .join("");
        techStackHidden.value = JSON.stringify(techStack);
      }

      function removeTech(tech) {
        techStack = techStack.filter((t) => t !== tech);
        updateTechStackTags();
      }

      function switchTab(tab) {
        // Store current tab in localStorage
        localStorage.setItem("activeTab", tab);

        // Remove active class from both tabs
        document.getElementById("projectsTab").classList.remove("active");
        document.getElementById("experiencesTab").classList.remove("active");
        // Add active class to selected tab
        document.getElementById(`${tab}Tab`).classList.add("active");

        // Get both sections
        const projectsSection = document.getElementById("projectsSection");
        const experiencesSection =
          document.getElementById("experiencesSection");

        if (tab === "projects") {
          // Show projects, hide experiences
          projectsSection.classList.remove("hidden");
          projectsSection.querySelector("form").removeAttribute("disabled");
          experiencesSection.classList.add("hidden");
          experiencesSection
            .querySelector("form")
            .setAttribute("disabled", "disabled");
        } else {
          // Show experiences, hide projects
          experiencesSection.classList.remove("hidden");
          experiencesSection.querySelector("form").removeAttribute("disabled");
          projectsSection.classList.add("hidden");
          projectsSection
            .querySelector("form")
            .setAttribute("disabled", "disabled");
        }
      }

      // Initialize tab state on page load
      document.addEventListener("DOMContentLoaded", () => {
        // Get active tab from localStorage, default to 'projects' if none stored
        const activeTab = localStorage.getItem("activeTab") || "projects";
        switchTab(activeTab);
      });

      async function deleteProject(id) {
        if (confirm("Are you sure you want to delete this project?")) {
          try {
            const response = await fetch(`/project/${id}`, {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
            });

            const data = await response.json();

            if (data.success) {
              window.location.reload();
            } else {
              alert("Failed to delete project");
            }
          } catch (error) {
            console.error("Error:", error);
            alert("Failed to delete project");
          }
        }
      }

      async function deleteExperience(id) {
        if (confirm("Are you sure you want to delete this experience?")) {
          try {
            const response = await fetch(`/experience/${id}`, {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
            });

            const data = await response.json();

            if (data.success) {
              window.location.reload();
            } else {
              alert("Failed to delete experience");
            }
          } catch (error) {
            console.error("Error:", error);
            alert("Failed to delete experience");
          }
        }
      }
    </script>

    <style>
      .active {
        background-color: rgba(34, 197, 94, 0.1);
        border-color: rgba(34, 197, 94, 0.4);
      }
    </style>
  </body>
</html>
